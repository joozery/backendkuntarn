const { query } = require('../db/db');

async function addTestData() {
  try {
    console.log('üîç Adding test data for customers and contracts...');
    
    // Add test customers with checker assignments
    const testCustomers = [
      {
        code: 'CUST001',
        name: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
        surname: '‡∏£‡∏∞‡∏ö‡∏ö',
        full_name: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏ö‡∏ö',
        id_card: '1234567890123',
        nickname: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
        phone: '081-111-1111',
        email: 'test@example.com',
        address: '123 ‡∏ñ‡∏ô‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
        status: 'active',
        branch_id: 1,
        checker_id: 1
      },
      {
        code: 'CUST002',
        name: '‡∏≠‡∏†‡∏¥‡∏£‡∏±‡∏ï‡∏ô‡πå',
        surname: '‡πÄ‡∏Å‡∏ï‡∏∏‡πÅ‡∏Å‡πâ‡∏ß',
        full_name: '‡∏≠‡∏†‡∏¥‡∏£‡∏±‡∏ï‡∏ô‡πå ‡πÄ‡∏Å‡∏ï‡∏∏‡πÅ‡∏Å‡πâ‡∏ß',
        id_card: '2345678901234',
        nickname: '‡∏≠‡∏†‡∏¥',
        phone: '081-222-2222',
        email: 'apirat@example.com',
        address: '456 ‡∏ñ‡∏ô‡∏ô‡∏≠‡∏†‡∏¥‡∏£‡∏±‡∏ï‡∏ô‡πå ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
        status: 'active',
        branch_id: 1,
        checker_id: 1
      },
      {
        code: 'CUST003',
        name: '‡∏™‡∏≤‡∏¢',
        surname: '‡∏û‡∏∏‡∏ó‡∏£‡∏û‡∏á‡∏©‡πå',
        full_name: '‡∏™‡∏≤‡∏¢ ‡∏û‡∏∏‡∏ó‡∏£‡∏û‡∏á‡∏©‡πå',
        id_card: '3456789012345',
        nickname: '‡∏™‡∏≤‡∏¢',
        phone: '081-333-3333',
        email: 'sai@example.com',
        address: '789 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏≤‡∏¢ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
        status: 'active',
        branch_id: 1,
        checker_id: 2
      },
      {
        code: 'CUST004',
        name: '‡∏™‡∏°‡∏ä‡∏≤‡∏¢',
        surname: '‡∏≠‡∏∏‡πà‡∏ô‡∏à‡∏¥‡∏ï',
        full_name: '‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡∏≠‡∏∏‡πà‡∏ô‡∏à‡∏¥‡∏ï',
        id_card: '4567890123456',
        nickname: '‡∏ä‡∏≤‡∏¢',
        phone: '081-444-4444',
        email: 'somchai@example.com',
        address: '111 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
        status: 'active',
        branch_id: 1,
        checker_id: 2
      },
      {
        code: 'CUST005',
        name: '‡∏£‡∏ì‡πÑ‡∏ä‡∏¢‡∏£‡∏£‡∏£‡∏°',
        surname: '‡∏Å‡∏•‡∏¥‡πà‡∏ô‡∏ó‡∏≠‡∏á',
        full_name: '‡∏£‡∏ì‡πÑ‡∏ä‡∏¢‡∏£‡∏£‡∏£‡∏° ‡∏Å‡∏•‡∏¥‡πà‡∏ô‡∏ó‡∏≠‡∏á',
        id_card: '5678901234567',
        nickname: '‡∏£‡∏ì',
        phone: '081-555-5555',
        email: 'ronachai@example.com',
        address: '222 ‡∏ñ‡∏ô‡∏ô‡∏£‡∏ì‡πÑ‡∏ä‡∏¢ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
        status: 'active',
        branch_id: 1,
        checker_id: 3
      },
      {
        code: 'CUST006',
        name: '‡∏£‡∏≤‡∏ä‡∏±‡∏ô',
        surname: '‡∏ä‡∏∑‡πà‡∏ô‡∏ä‡∏°',
        full_name: '‡∏£‡∏≤‡∏ä‡∏±‡∏ô ‡∏ä‡∏∑‡πà‡∏ô‡∏ä‡∏°',
        id_card: '6789012345678',
        nickname: '‡∏£‡∏≤‡∏ä‡∏±‡∏ô',
        phone: '081-666-6666',
        email: 'rachan@example.com',
        address: '333 ‡∏ñ‡∏ô‡∏ô‡∏£‡∏≤‡∏ä‡∏±‡∏ô ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
        status: 'active',
        branch_id: 1,
        checker_id: 3
      },
      {
        code: 'CUST007',
        name: '‡∏û‡∏µ‡∏£‡∏∞',
        surname: '‡πÇ‡∏£‡∏à‡∏ô‡∏ó‡∏ô‡∏á‡∏Ñ‡πå',
        full_name: '‡∏û‡∏µ‡∏£‡∏∞ ‡πÇ‡∏£‡∏à‡∏ô‡∏ó‡∏ô‡∏á‡∏Ñ‡πå',
        id_card: '7890123456789',
        nickname: '‡∏û‡∏µ‡∏£‡∏∞',
        phone: '081-777-7777',
        email: 'pira@example.com',
        address: '444 ‡∏ñ‡∏ô‡∏ô‡∏û‡∏µ‡∏£‡∏∞ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
        status: 'active',
        branch_id: 1,
        checker_id: 4
      }
    ];
    
    // Insert customers
    for (const customer of testCustomers) {
      try {
        await query(`
          INSERT INTO customers (
            code, name, surname, full_name, id_card, nickname, phone, email, address, 
            status, branch_id, checker_id, created_at, updated_at
          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, NOW(), NOW())
        `, [
          customer.code, customer.name, customer.surname, customer.full_name,
          customer.id_card, customer.nickname, customer.phone, customer.email,
          customer.address, customer.status, customer.branch_id, customer.checker_id
        ]);
        
        console.log(`‚úÖ Added customer: ${customer.full_name}`);
      } catch (error) {
        if (error.code === 'ER_DUP_ENTRY') {
          console.log(`‚ö†Ô∏è Customer ${customer.full_name} already exists`);
        } else {
          console.error(`‚ùå Error adding customer ${customer.full_name}:`, error.message);
        }
      }
    }
    
    // Get the customer IDs we just created
    const customerIds = await query('SELECT id, full_name FROM customers WHERE code LIKE "CUST%" ORDER BY id DESC LIMIT 7');
    
    // Add test contracts
    const testContracts = [
      {
        contract_number: 'CT250729001',
        customer_id: customerIds[0]?.id,
        product_id: 1,
        product_name: '‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ Samsung Galaxy S21',
        total_amount: 25000.00,
        installment_amount: 2500.00,
        remaining_amount: 22500.00,
        installment_period: 10,
        start_date: '2024-07-01',
        end_date: '2025-04-01',
        branch_id: 1,
        salesperson_id: 1,
        inspector_id: 1,
        status: 'active'
      },
      {
        contract_number: 'CT250729002',
        customer_id: customerIds[1]?.id,
        product_id: 2,
        product_name: '‡πÇ‡∏ô‡πâ‡∏ï‡∏ö‡∏∏‡πä‡∏Ñ Dell Inspiron 15',
        total_amount: 35000.00,
        installment_amount: 3500.00,
        remaining_amount: 31500.00,
        installment_period: 10,
        start_date: '2024-07-15',
        end_date: '2025-04-15',
        branch_id: 1,
        salesperson_id: 1,
        inspector_id: 1,
        status: 'active'
      },
      {
        contract_number: 'CT250729003',
        customer_id: customerIds[2]?.id,
        product_id: 3,
        product_name: '‡∏ó‡∏µ‡∏ß‡∏µ LG 55 ‡∏ô‡∏¥‡πâ‡∏ß',
        total_amount: 45000.00,
        installment_amount: 4500.00,
        remaining_amount: 40500.00,
        installment_period: 10,
        start_date: '2024-08-01',
        end_date: '2025-05-01',
        branch_id: 1,
        salesperson_id: 1,
        inspector_id: 2,
        status: 'active'
      },
      {
        contract_number: 'CT250729004',
        customer_id: customerIds[3]?.id,
        product_id: 4,
        product_name: '‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô Samsung 2 ‡∏õ‡∏£‡∏∞‡∏ï‡∏π',
        total_amount: 28000.00,
        installment_amount: 2800.00,
        remaining_amount: 25200.00,
        installment_period: 10,
        start_date: '2024-08-15',
        end_date: '2025-05-15',
        branch_id: 1,
        salesperson_id: 1,
        inspector_id: 2,
        status: 'active'
      },
      {
        contract_number: 'CT250729005',
        customer_id: customerIds[4]?.id,
        product_id: 5,
        product_name: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤ Panasonic',
        total_amount: 18000.00,
        installment_amount: 1800.00,
        remaining_amount: 16200.00,
        installment_period: 10,
        start_date: '2024-09-01',
        end_date: '2025-06-01',
        branch_id: 1,
        salesperson_id: 1,
        inspector_id: 3,
        status: 'active'
      },
      {
        contract_number: 'CT250729006',
        customer_id: customerIds[5]?.id,
        product_id: 6,
        product_name: '‡πÅ‡∏≠‡∏£‡πå‡∏Ñ‡∏≠‡∏ô‡∏î‡∏¥‡∏ä‡∏±‡∏ô Daikin',
        total_amount: 22000.00,
        installment_amount: 2200.00,
        remaining_amount: 19800.00,
        installment_period: 10,
        start_date: '2024-09-15',
        end_date: '2025-06-15',
        branch_id: 1,
        salesperson_id: 1,
        inspector_id: 3,
        status: 'active'
      },
      {
        contract_number: 'CT250729007',
        customer_id: customerIds[6]?.id,
        product_id: 1,
        product_name: '‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ Samsung Galaxy S21',
        total_amount: 25000.00,
        installment_amount: 2500.00,
        remaining_amount: 22500.00,
        installment_period: 10,
        start_date: '2024-10-01',
        end_date: '2025-07-01',
        branch_id: 1,
        salesperson_id: 1,
        inspector_id: 4,
        status: 'active'
      }
    ];
    
    // Insert contracts
    for (const contract of testContracts) {
      if (!contract.customer_id) continue;
      
      try {
        await query(`
          INSERT INTO installments (
            contract_number, customer_id, product_id, product_name, total_amount,
            installment_amount, remaining_amount, installment_period, start_date, end_date,
            branch_id, salesperson_id, inspector_id, status, created_at, updated_at
          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, NOW(), NOW())
        `, [
          contract.contract_number, contract.customer_id, contract.product_id,
          contract.product_name, contract.total_amount, contract.installment_amount,
          contract.remaining_amount, contract.installment_period, contract.start_date,
          contract.end_date, contract.branch_id, contract.salesperson_id,
          contract.inspector_id, contract.status
        ]);
        
        console.log(`‚úÖ Added contract: ${contract.contract_number}`);
      } catch (error) {
        if (error.code === 'ER_DUP_ENTRY') {
          console.log(`‚ö†Ô∏è Contract ${contract.contract_number} already exists`);
        } else {
          console.error(`‚ùå Error adding contract ${contract.contract_number}:`, error.message);
        }
      }
    }
    
    console.log('‚úÖ Test data added successfully!');
    
    // Show summary
    const customersWithCheckers = await query(`
      SELECT 
        c.full_name as customer_name,
        ch.full_name as checker_name,
        COUNT(i.id) as contract_count
      FROM customers c
      LEFT JOIN checkers ch ON c.checker_id = ch.id
      LEFT JOIN installments i ON c.id = i.customer_id
      WHERE c.code LIKE 'CUST%'
      GROUP BY c.id, c.full_name, ch.full_name
      ORDER BY ch.full_name, c.full_name
    `);
    
    console.log('\nüìä Summary of test data:');
    customersWithCheckers.forEach(c => {
      console.log(`  - ${c.customer_name} ‚Üí ${c.checker_name} (${c.contract_count} contracts)`);
    });
    
  } catch (error) {
    console.error('‚ùå Error adding test data:', error);
  }
}

// Run the script
addTestData()
  .then(() => {
    console.log('‚úÖ Script completed successfully');
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå Script failed:', error);
    process.exit(1);
  }); 