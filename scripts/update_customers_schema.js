const { query } = require('../db/db');

async function updateCustomersSchema() {
  try {
    console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï schema ‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á customers...');

    // ‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°
    const newFields = [
      { name: 'title', type: 'VARCHAR(10) DEFAULT "‡∏ô‡∏≤‡∏¢"' },
      { name: 'age', type: 'INT' },
      { name: 'moo', type: 'VARCHAR(50)' },
      { name: 'road', type: 'VARCHAR(255)' },
      { name: 'subdistrict', type: 'VARCHAR(255)' },
      { name: 'district', type: 'VARCHAR(255)' },
      { name: 'province', type: 'VARCHAR(255)' },
      { name: 'phone1', type: 'VARCHAR(20)' },
      { name: 'phone2', type: 'VARCHAR(20)' },
      { name: 'phone3', type: 'VARCHAR(20)' }
    ];

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏´‡∏°‡πà
    for (const field of newFields) {
      const checkColumnQuery = `
        SELECT COLUMN_NAME 
        FROM INFORMATION_SCHEMA.COLUMNS 
        WHERE TABLE_SCHEMA = DATABASE() 
        AND TABLE_NAME = 'customers' 
        AND COLUMN_NAME = ?
      `;
      
      const existingColumns = await query(checkColumnQuery, [field.name]);
      
      if (existingColumns.length === 0) {
        console.log(`üìù ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå ${field.name} ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á customers...`);
        
        const addColumnQuery = `
          ALTER TABLE customers 
          ADD COLUMN ${field.name} ${field.type}
        `;
        
        await query(addColumnQuery);
        console.log(`‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå ${field.name} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
      } else {
        console.log(`‚ÑπÔ∏è ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå ${field.name} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß`);
      }
    }

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    console.log('üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà...');
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï phone1 ‡∏à‡∏≤‡∏Å phone ‡πÄ‡∏î‡∏¥‡∏°
    const updatePhone1Query = `
      UPDATE customers 
      SET phone1 = phone 
      WHERE phone1 IS NULL AND phone IS NOT NULL
    `;
    const phone1Result = await query(updatePhone1Query);
    console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï phone1 ‡∏à‡∏≤‡∏Å phone ‡πÄ‡∏î‡∏¥‡∏°: ${phone1Result.affectedRows} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï title ‡πÄ‡∏õ‡πá‡∏ô '‡∏ô‡∏≤‡∏¢' ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ title
    const updateTitleQuery = `
      UPDATE customers 
      SET title = '‡∏ô‡∏≤‡∏¢' 
      WHERE title IS NULL
    `;
    const titleResult = await query(updateTitleQuery);
    console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï title ‡πÄ‡∏õ‡πá‡∏ô '‡∏ô‡∏≤‡∏¢': ${titleResult.affectedRows} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);

    console.log('üéâ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï schema ‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á customers ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï schema:', error);
    throw error;
  }
}

// ‡∏£‡∏±‡∏ô script ‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
if (require.main === module) {
  updateCustomersSchema()
    .then(() => {
      console.log('‚úÖ Script ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Script ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
      process.exit(1);
    });
}

module.exports = { updateCustomersSchema }; 